---
title: "Calibrate Aeronautical Benefits"
format: html
editor: visual
---

```{r}
rm(list = ls())
library(tidyverse)

airport_pm <- read_csv("./data/airports/airport_pm.csv")
fin <- read_csv("./data/airports/airport_financials.csv")
```

```{r}
fin %>%
  mutate(operating_profit = `Total Operating Revenue` - `Total Operating Expenses`) %>%
  select(LOC_ID, `Total Operating Revenue`, `Total Operating Expenses`, operating_profit, `Fuel sales net profit/loss or fuel flowage fees`) %>%
  rename(tot_oper_rev = `Total Operating Revenue`) %>%
  rename(tot_oper_exp = `Total Operating Expenses`) %>%
  rename(fuel_net_profit = `Fuel sales net profit/loss or fuel flowage fees`) -> fin_red
```

```{r}
airport_pm %>% left_join(fin_red, by = join_by(AIRPORT == LOC_ID)) %>%
  filter(!is.na(operating_profit)) %>%
  mutate(tot_oper_rev = tot_oper_rev/1000000) %>%
  mutate(tot_oper_exp = tot_oper_exp/1000000) %>%
  mutate(fuel_net_profit = fuel_net_profit/1000000) %>%
  mutate(operating_profit = operating_profit/1000000) %>%
  mutate(fuel_profit_pm = fuel_net_profit/(orig_pm/1000000)) -> joined_df

summary(joined_df)
```

We can optionally remove outliers which may help improve fit, if we feel special rule-breaking conditions apply to those outlier observations.

```{r}
summary(joined_df$orig_pm)
```

```{r}
# Remove passenger-mile outliers


# Remove outliers with extreme profit/loss
#joined_df <- joined_df %>%
#  filter(tot_oper_rev>0, tot_oper_exp>0) 

#prof_outliers <- boxplot(joined_df$prof_loss, plot=FALSE)$out
#joined_df <- joined_df[-which(joined_df$prof_loss %in% prof_outliers),]
```

```{r}
summary(joined_df$orig_pm)
```

```{r}
m_rev <- lm(tot_oper_rev ~ orig_pm+0, data = joined_df)
m_rev_df <- joined_df
m_rev_df["resid"] = m_rev$residuals
rev_resid_out <- boxplot(m_rev_df$resid, plot = FALSE)$out
m_rev_df <- m_rev_df[-which(m_rev_df$resid %in% rev_resid_out), ]
```

```{r}
ggplot(joined_df, aes(x = orig_pm, y = tot_oper_rev)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x+0)
  
```

```{r}
m_exp <- lm(tot_oper_exp ~ orig_pm+0, data = joined_df)
m_exp_df <- joined_df
m_exp_df["resid"] = m_exp$residuals
exp_resid_out <- boxplot(m_exp_df$resid, plot = FALSE)$out
m_exp_df <- m_exp_df[-which(m_exp_df$resid %in% exp_resid_out), ]
```

```{r}
ggplot(joined_df, aes(x = orig_pm, y = tot_oper_exp)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x+0)
```

```{r}
pm_out <- boxplot(joined_df$orig_pm, plot=FALSE)$out
prof_df <- joined_df
prof_df <- prof_df[-which(prof_df$orig_pm %in% pm_out), ]

prof_df = prof_df %>%
  filter(tot_oper_rev>0, tot_oper_exp>0)

prof_out <- boxplot(prof_df$operating_profit, plot=FALSE)$out
prof_df <- prof_df[-which(prof_df$operating_profit %in% prof_out), ]

m_prof <- lm(operating_profit ~ orig_pm, data = joined_df)
summary(m_prof)

ggplot(joined_df, aes(x = orig_pm, y = operating_profit)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x)
```

```{r}
fuel_out <- boxplot(joined_df$fuel_net_profit, plot=FALSE)$out
fuel_df <- joined_df
fuel_df <- fuel_df[-which(fuel_df$fuel_net_profit %in% fuel_out), ]

ggplot(fuel_df, 
       aes(x = orig_pm, y = fuel_net_profit)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x +0)
```

```{r}
m_rev <- lm(tot_oper_rev ~ orig_pm+0, data = joined_df)
summary(m_rev)
m_exp <- lm(tot_oper_exp ~ orig_pm+0, data = joined_df)
summary(m_exp)
```

```{r}
format(coef(m_rev), scientific=F)

format(coef(m_exp), scientific=F)
```

```{r}
ggplot(joined_df, aes(x = fuel_profit_pm)) + 
  geom_histogram()
```

```{r}
joined_df %>%
  mutate(rev_pm = tot_oper_rev / orig_pm) %>%
  mutate(exp_pm = tot_oper_exp / orig_pm) %>%
  mutate(fuel_pm = fuel_net_profit / orig_pm) %>%
  summarize(avg_rev_pm = mean(rev_pm),
            avg_exp_pm = mean(exp_pm),
            avg_fuel_pm = mean(fuel_pm)) -> sres

format(as.numeric(sres[1, "avg_rev_pm"]), scientific = F)
format(as.numeric(sres[1,"avg_exp_pm"]), scientific=F)
format(as.numeric(sres[1,"avg_fuel_pm"]), scientific = F)
```

```{r}
format(as.numeric(coef(m_rev)), scientific = F)
format(as.numeric(coef(m_exp)), scientific=F)
```

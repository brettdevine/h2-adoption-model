---
title: "Adoption Curve over Time"
format: html
---

For any parameter vector $\Theta$ the resulting game $\Gamma(\Theta)$ will involve the distribution of airport sizes $G(Q)$.
This distribution is used to find the adoption rate by finding the probability (measure) that an airport has sufficient size $Q$ to warrant adoption.
Let $Q^*$ be the airport size at which an aiport is indifferent between adoption and nonadoption.
Then the proportion adopting is,

$$
\begin{align}
S = 1 - G(Q^*)
\end{align}
$$

Because the $Q^*(S)$ is a function of $S$, we can derive a recursive relationship

$$
S_t = 1 - G(Q^*(S_{t-1}))
$$

and of course whenever $S_t = S_{t-1}$ we will have a fixed point.

In the simultaneous model dynamics of the model with network effects, adoption dynamics can "unravel" so that starting with a positive adoption rate below the tipping point can result in people "unadopting" until we get to the equilibrium value of 0 adoption.
However, in the reality of infrastructure installation, airports who previously install, may not see fit to uninstall. 
When "unadoption" is not a thing, then the proportion of adopters $S$ can only weakly increase, but not decrease over time.

The question is, what, if any, of the other model aspects or parameters are altered by an existing pool of adopters that cannot or will not remove the installed infrastructure.
```{r}
rm(list = ls())
source("./h2_adopt_model.R")
source("./h2_adopt_model_plots.R")
```

```{r}
library(tidyverse)
library(ggthemes)
```

## Tipping Point over Time

```{r}
# Gamma Distribution Parameters
# Current parameters from mode-mean calibration
theta = 1727595.34 #188386.36
k = 1.032609 #1.046095

calibrated_gamma_cdf <- function(x) {
  pgamma(x, shape = k, scale = theta)
}

init_model = data.frame(
      "p_h" = 1.2
    , "f_k_rev" = 0.00000002118861
    , "f_k_exp" = 0.00000001871368
    , "f_h_rev" = 1.0
    , "f_h_exp" = 1.0
    , "delta" = 0.04
    , "gamma" = 0.02
    , "x" = 173.75 
    , "c_x" = 0 #2.7031
    , "eta" = 0.00000001425
    , "nu" = 0.5
    , "rho" = 0.5
    )

gr = data.frame(
      "p_h" = -0.1
    , "f_k_rev" = 0.0
    , "f_k_exp" = 0.0
    , "f_h_rev" = 0.0
    , "f_h_exp" = -0.1
    , "delta" = 0.0
    , "gamma" = 0.0
    , "x" = -0.25
    , "c_x" = -0.2
    , "eta" = 0.0
    , "nu" = 0.5
    , "rho" = 0.0
)

model <- list(init_model,
              gr,
              calibrated_gamma_cdf)
names(model) <- c("init_params", "gr", "cdf")

model_set <- parameter_paths(model$init_params, model$gr)
```


```{r}
ne_vec <- nash_equilibria_vec(model_set, model$cdf)
res <- adoption_dynamics(model_set, model$cdf, 0.01)
ne_vec <- cbind(ne_vec, res)
ne_vec <- ne_vec %>%
    mutate(time = c(2026:2075))
ne_vec["alpha"] <- alpha_vec(ne_vec["s"], model_set)
ne_vec["q_cutoff"] <- adoption_cutoff_vec(ne_vec["s"], model_set)
```

```{r}
# Adoption curve, tipping point, max_eq, and alpha over time.
colors <- c("Gov. Increment of adoption" = "lightgrey"
          , "Tipping Point Nash Equilibrium" = "green"
          , "High Nash Equilibrium" = "blue"
          , "Proportion Airports Adopted" = "black"
          , "Proportion H2 Flight" = "red")


ggplot(data = ne_vec) +
    geom_area(aes(x = time, y = s_inc, fill = "Gov. Increment of adoption"), alpha = 0.5) +
    geom_line(aes(x = time, y = tipp, color = "Tipping Point Nash Equilibrium")) +
    geom_line(aes(x = time, y = high, color = "High Nash Equilibrium")) +
    geom_line(aes(x = time, y = s, color = "Proportion Airports Adopted")) +
    geom_line(aes(x = time, y = alpha, color = "Proportion H2 Flight")) +
    scale_x_continuous(n.breaks=10) +
    labs(x = "Time", y = "(%)", color = "Curve Legend", fill = "Area Legend") +
    scale_color_manual(values = colors) +
    theme_clean()
```

```{r}
# Relationship between alpha(s) and s over time
ggplot(data = ne_vec) +
    geom_line(aes(x = alpha, y = s)
        , linewidth = 2
        , color = "aquamarine3") +
    theme_clean()
```


```{r}
p_df <- dynamic_adoption_plot_data(model_set, model$cdf, 0.01)
dynamic_adoption_plot(select(p_df, -q_cutoff))
ggsave(file="./plot-img/adoption_dynamics.pdf", width = 8, height = 4, dpi = 300)
```


```{r}
m = list(model$init_params, model$cdf)
names(m) = c("model_params", "cdf")
plot_df2 <- ne_plot_recursive_data(m)
```

